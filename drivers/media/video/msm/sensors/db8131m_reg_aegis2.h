/* Copyright (c) 2011, Code Aurora Forum. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef __db8131m_REG_H
#define __db8131m_REG_H

/* =================================================================*/
/* Name     : db8131s Module                                */
/* Version  :                                               */
/* PLL mode : MCLK - 24MHz                                  */
/* fPS      :                                               */
/* PRVIEW   : 640*480                                       */
/* Made by  : Dongbu Hitek                                  */
/* date     : 12/05/15                                       */
/* date     : 12/05/15                                       */
/* Model    : Aegis2                                        */
/* ǻ : 0xE796 ð  0xE796 I2C write   */
/*            150ms delay   ð I2C write ָ     */
/* =================================================================*/

static const u16 db8131m_common[] = {

0xFFC0,
0x1001,
0xE796,


0xFFA1,
0x7001,
0x710D,


0xFFD0,
0x0E0A,
0x0F0D,
0x1300,
0x1500,
0x1834,
0x1921,
0x1A07,
0x200F,
0x2300,
0x2400,
0x399F,
0x511F,
0x8365,
0x8567,
0x8765,
0x8967,
0x8B27,
0x8D6c,
0x9114,
0xC509,
0xD196,
0xD740,
0xDB9F,
0xED01,
0xEE0F,
0xEF00,
0xF840,
0xF900,
0xFB50,



0xFF85,
0x89C3,
0x8A0C,
0x8C07,
0x8D40,
0x8E01,
0x8F0C,
0x9111,
0x921F,
0x9378,
0x9519,
0x961A,
0x970E,
0x980E,
0x9907,
0x9A00,
0x9B00,
0x9C0C,
0x9D7E,
0x9E29,
0x9F7F,
0xA079,
0xA175,
0xA218,
0xA333,
0xA40F,
0xFE20,
0xFF86,
0x1500,
0x16FA,
0x1709,
0x1800,
0x1900,
0x1BF0,
0x1C00,
0x1D0C,
0x1F09,
0x2078,
0x2218,
0x232A,
0x240E,
0x2577,
0x2DEB,
0xFF87,
0xDDB0,
0xE120,
0xEA41,
0xF139,
0xFF83,
0x6328,
0x6410,
0x65A8,
0x6650,
0x6728,
0x6814,
0xFF82,
0xB909,
0xBA80,
0xBB09,
0xBC80,
0xBD09,
0xBE80,

0xFFB0,
0x3C81,
0x5001,

0xFFD1,
0x0700,
0x0B00,
0x0301,




0xFF82,
0x9101,
0x9555,
0x9655,
0x97F5,
0x985F,
0x99F5,
0x9A5F,
0x9B55,
0x9C55,
0x9E01,
0xA93E,
0xAA40,
0x9D88,
0x9F06,
0xA840,
0xC502,
0xC638,
0xC724,
0xC810,
0xC905,
0xD560,
0xA10A,
0xF309,
0xF460,
0xF900,
0xFAC0,
0xFB55,
0xFC43,
0xFD28,
0xFE12,
0xD310,
0xD446,
0xD560,
0xD601,
0xD700,
0xD801,
0xD950,
0xDA05,
0xDB00,
0xFF83,
0x030F,
0x0408,
0x0504,
0x0604,
0x0B04,
0x0C4C,
0x5D00,
0x5E8F,
0x2F04,
0x3005,
0x4F05,
0xFF82,
0x925D,


0xFF83,
0x7983,
0x8200,
0x8601,
0x8780,
0x9005,
0x9405,
0x98D4,
0xA228,
0xA300,
0xA40F,
0xAD65,
0xAE80,
0xAF20,
0xB410,
0xB554,
0xB6BD,
0xB774,
0xB89D,
0xBA4F,
0xBF0C,
0xC080,
0xFF84,
0x3D00,
0x3E00,
0x3F06,
0x4020,
0x4107,
0x4253,
0x4300,
0x4400,
0x4900,
0x4A10,
0x4B03,
0x4C00,

0x5D03,
0x5E03,
0x5F03,
0x6003,
0x6120,
0x6200,
0x6303,
0x6403,

0x5501,
0x5607,
0x5714,
0x5814,
0x5910,
0x5A00,
0x5B10,
0x5C10,

0x6503,
0x6600,
0x6703,
0x6820,
0x6902,
0x6A02,
0x6B03,
0x6C15,
0xFF85,
0xE20C,
0xFF83,
0xCB04,
0xCC50,
0xCD07,
0xCE40,
0xD106,
0xd220,
0xCF02,
0xD080,



0xFFA1,
0x9C00,
0x9DF0,
0xA063,
0xA17A,
0xA269,
0xA36F,
0xA48C,
0xA540,
0xA6A6,
0xA731,
0xA86E,
0xA95b,
0xAA8b,
0xAB41,
0xAC64,
0xAD68,
0xAE7D,
0xAF4B,
0xB046,
0xB168,
0xB264,
0xB34D,
0xB400,
0xB500,
0xB600,
0xB700,
0xB841,
0xB985,
0xBA54,
0xBB6a,
0xBC3C,
0xBD9a,
0xBE4C,
0xBF82,
0xC05B,
0xC185,
0xC260,
0xC37F,


0xFF87,
0xC922,
0xFF86,
0x141E,
0xFF85,
0x0605,
0x8640,
0x0700,




0xFF83,
0xEA00,
0xEB6A,
0xECFF,
0xEDD5,
0xEEff,
0xEFF5,
0xF0FF,
0xF1F3,
0xF200,
0xF348,
0xF4FF,
0xF5FA,
0xF6FF,
0xF7FF,
0xF8FF,
0xF9CC,
0xFA00,
0xFB6E,


0xFC00,
0xFD64,
0xFF85,
0xE0FF,
0xE1e0,
0xFF84,
0x00ff,
0x01f4,
0x02FF,
0x03F3,
0x0400,
0x054B,
0x06FF,
0x07FA,
0x08FF,
0x09FC,
0x0AFF,
0x0BCC,
0x0C00,
0x0D69,


0x0E00,
0x0F6d,
0x10FF,
0x11d5,
0x12ff,
0x13fe,
0x14FF,
0x15f4,
0x1600,
0x175a,
0x18ff,
0x19f2,
0x1Aff,
0x1Bfa,
0x1CFF,
0x1Dbe,
0x1E00,
0x1F86,


0xFF86,
0x4502,
0x4600,
0xFF85,
0xFE35,
0xEC00,
0xED7D,
0xEEFF,
0xEFB3,
0xF000,
0xF111,
0xF2FF,
0xF3F8,
0xF400,
0xF548,
0xF600,
0xF701,
0xF8FF,
0xF9F5,
0xFAFF,
0xFBD1,
0xFC00,
0xFD7A,





0xFFA0,
0x1080,
0x1109,
0x6073,
0x611F,
0x690C,
0x6A60,
0xC204,
0xD051,
0xFFA1,
0x3000,
0x3200,
0x3400,
0x3516,
0x3600,
0x3730,
0x3A00,
0x3BC0,
0x3CFF,


0xFF85,
0x1721,
0x260C,
0x3c00,


0xFF86,
0x680A,
0x6909,
0x6a08,
0x6b07,
0x6c00,
0x6d07,


0x6F09,
0x7008,
0x7102,
0x7202,
0x7305,
0x74F0,


0xFF85,
0x1898,
0x2702,
0x3d02,


0x12A5,
0x221D,
0x2340,
0x3814,
0x3928,
0xFF86,
0x1206,
0x1306,


0xFF85,
0xE822,
0xE950,
0xEA0E,
0xEB18,


0xFF85,
0x15F4,
0x2D20,
0x2E30,
0x4308,
0x4430,


0x04FB,
0x14A5,
0x2808,
0x2907,
0x2A08,
0x2B05,
0x2C22,
0x3E02,
0x3F08,
0x4009,
0x4107,
0x4222,


0xFF85,
0x6910,
0x6A00,
0x6B00,
0x6C00,
0x6D20,


0x1690,
0x4700,
0x4819,
0x4925,
0x4A37,
0x4B45,
0x4C51,
0x4D65,
0x4E77,
0x4F87,
0x5095,
0x51AF,
0x52C6,
0x53DB,
0x54E5,
0x55EE,
0x56F7,
0x57FF,

0x5800,
0x5904,
0x5a14,
0x5b30,
0x5c4A,
0x5d5D,
0x5e75,
0x5f89,
0x609A,
0x61A7,
0x62BC,
0x63D0,
0x64E0,
0x65E7,
0x66EE,
0x67F7,
0x68FF,


0x1A10,
0x3060,
0x0F43,
0x10E3,


0xFFA0,
0x4378,
0x4480,
0x4580,
0x4680,
0x4780,
0x4880,
0x4980,
0x4A80,
0x4B80,
0x4C80,
0x4D80,
0x4E80,
0x5290,
0x5320,
0x5400,


0xFF86,
0x51A0,
0x5220,
0x5300,
0x5480,
0x5520,
0x5600,
0x5790,
0x5820,
0x5900,


0x48B0,
0x4920,
0x4A00,
0x4B80,
0x4C18,
0x4D00,
0x4E90,
0x4F20,
0x5000,



0xFF87,
0xDC05,
0xDDB0,
0xd500,

0xFFD0,
0x200E,
0x200D,


0xFFB0,
0x5402,
0x3805,


0xFF85,
0xB71E,
0xB80A,
0xB900,
0xBC04,
0xFF87,
0x0C00,
0x0D20,
0x1003,
0x11E0,


0xFF86,
0x371E,
0x3805,
0x3900,
0x3C04,

0xFF87,
0x2302,
0x2501,
0x260F,
0x2700,
0x2800,
0x2901,
0x2A00,
0x2B3F,
0x2CFF,
0x2DFF,
0x2E00,
0x2F02,
0x3001,
0x31FF,
0x3203,
0x33FF,
0x3400,
0x3500,
0x3600,
0x3710,
0x3802,
0x3980,
0x3A01,
0x3BF0,
0x3C01,
0x3D0C,
0x3E04,
0x3F04,
0x4066,
0x415E,
0x4204,
0x4304,
0x4498,
0x4578,
0x4622,
0x4728,
0x4820,
0x4978,
0x4A60,
0x4B03,
0x4C00,


0xFF86,
0x2E1E,
0x2F05,
0x3000,
0x3304,

0xFF87,
0x4D00,
0x4E72,
0x4F01,
0x500F,
0x5100,
0x5200,
0x5301,
0x5400,
0x553F,
0x56FF,
0x57FF,
0x5800,
0x5902,
0x5A01,
0x5BFF,
0x5C01,
0x5DFF,
0x5E00,
0x5F00,
0x6000,
0x6110,
0x6202,
0x6380,
0x6401,
0x65F0,

0xFFd1,
0x0700,
0x0b00,
0xFFC0,
0x1041,


0xFFD0,
0x200F,
0xE732,
};


static const u32 db8131m_vt_common[] = {

0xFF87,
0xDE7A,
0xFFC0,
0x1042,


0xFF82,
0x9102,
0xFF83,
0x0D08,
0x0E0D,
0x030f,
0x040A,
0x0506,
0x0604,
0xFF82,
0x925D,
};


static const u32 db8131m_vt_wifi_common[] = {

0xFF87,
0xDE7A,
0xFFC0,
0x1042,


0xFF82,
0x9102,
0xFF83,
0x0D04,
0x0E4C,
0x0308,
0x0407,
0x0506,
0x0604,
0xFF82,
0x925D,
};

static const u16 db8131m_preview[] = {
0xE796,
};


static const u16 db8131m_capture[] = {
0xffC0,
0x1003,
0xE796,
};

static const u16 db8131m_720p_common[] = {

0xFFC0,
0x1001,
0xE796,


0xFFA1,
0x7001,
0x710D,

0xFFD0,
0x0F0D,
0x1300,
0x1501,
0x2013,
0x2300,
0x2401,
0x3970,
0x511D,
0x832D,
0x852F,
0x872D,
0x892F,
0x8B27,
0x8D6C,
0xD780,
0xD962,
0xDBA2,
0xED01,
0xEE13,
0xEF00,
0xF900,
0xFBB8,

0xFF85,
0x89C2,
0x8D60,
0x8E03,
0x8F14,
0x9119,
0x920F,
0x9364,
0x9518,
0x9640,
0x970A,
0x980D,
0x9906,
0x9B02,
0x9C18,
0x9E11,
0x9F5D,
0xA074,
0xA218,
0xA340,
0xA40B,
0xFF86,
0x1500,
0x16B5,
0x1713,
0x1824,
0x191C,
0x1A07,
0x1B30,
0x1C01,
0x1D14,
0x1F31,
0x2064,
0x2218,
0x2329,
0x240B,
0x2577,
0xFFD0,
0x2011,
0xFF87,
0xDC05,
0xDD34,
0xF139,
0xFF83,
0x6328,
0x6410,
0x65A8,
0x6650,
0x6728,
0x6814,
0xFF87,
0x2310,


0xFFA1,
0x99A0,
0xFF83,
0x4F05,
0x0304,
0x0404,
0x0504,
0x0604,
0xFF82,
0xF901,
0xFA60,
0xFBB0,
0xFC70,
0xFD30,
0xFE12,
0xD600,
0xD7A0,
0xD801,
0xD900,
0xDA02,
0xDB80,
0xD318,
0xD430,
0xD5D0,
0xF30B,
0xF4A9,
0xA10A,
0xFF83,
0x0F02,
0x10EE,
0xFF82,
0x9102,
0x924F,


0xFF83,
0x79B3,
0x9005,
0x9405,
0x98D4,
0xA228,
0xA300,
0xA401,
0xFF84,
0x5E20,
0x3D00,
0x3E00,
0x3F06,
0x4020,
0x4107,
0x4253,
0x4300,
0x4400,
0xFF83,
0xAE77,
0xB554,
0xB6C3,
0xB770,
0xB8A4,
0xFF87,
0xC922,
0xFF84,
0x4902,
0x4A00,
0x4B03,
0x4C40,
0xFF83,
0xCB03,
0xCCC0,


0xFFA1,
0xA021,
0xA16E,
0xA225,
0xA36A,
0xA49C,
0xA54A,
0xA6AA,
0xA73C,
0xA878,
0xA96E,
0xAA8F,
0xAB42,
0xAC5A,
0xAD60,
0xAE78,
0xAF4B,
0xB04D,
0xB16F,
0xB263,
0xB35D,
0xB401,
0xB502,
0xB603,
0xB704,
0xB846,
0xB994,
0xBA5A,
0xBB84,
0xBC48,
0xBDAC,
0xBE50,
0xBFA8,
0xC049,
0xC181,
0xC258,
0xC378,


0xFF87,
0xC922,
0xFF83,
0xEA00,
0xEB72,
0xECFF,
0xEDCE,
0xEE00,
0xEF00,
0xF0FF,
0xF1F4,
0xF200,
0xF350,
0xF4FF,
0xF5FC,
0xF600,
0xF700,
0xF8FF,
0xF9C0,
0xFA00,
0xFB80,
0xFC00,
0xFD6D,
0xFF85,
0xE0FF,
0xE1D5,
0xFF84,
0x00FF,
0x01FE,
0x02FF,
0x03E8,
0x0400,
0x055A,
0x06FF,
0x07FC,
0x08FF,
0x09FA,
0x0AFF,
0x0BBE,
0x0C00,
0x0D86,
0x0E00,
0x0F3A,
0x10FF,
0x11FE,
0x1200,
0x1300,
0x14FF,
0x15F0,
0x1600,
0x1750,
0x1800,
0x1900,
0x1AFF,
0x1BF0,
0x1CFF,
0x1DB8,
0x1E00,
0x1F99,


0xFF85,
0x1640,
0xFFA0,
0x1080,
0x60A3,
0x61CD,
0x690C,
0x6A60,
0xC204,
0xD051,
0xFFA1,
0x3001,
0x3250,
0x3400,
0x350B,
0x3601,
0x3780,
0x3A00,
0x3B30,
0x3C08,
0xFF85,
0x0F43,
0x1043,
0x1730,
0x2613,
0x3C00,
0x1843,
0x2700,
0x3D00,
0x12E5,
0x2240,
0x2370,
0x3804,
0x3930,
0x15F4,
0x2D20,
0x2E30,
0x4340,
0x4480,
0x04FB,
0x0605,
0x14A3,
0x2800,
0x2903,
0x2A20,
0x2B03,
0x2C20,
0x3E00,
0x3F06,
0x4022,
0x4101,
0x4255,
0x5800,
0x5904,
0x5A06,
0x5B2E,
0x5C41,
0x5D4E,
0x5E6A,
0x5F7F,
0x6091,
0x61A0,
0x62C1,
0x63D3,
0x64E3,
0x65EB,
0x66F2,
0x67F9,
0x68FF,
0x4700,
0x4818,
0x492D,
0x4A47,
0x4B57,
0x4C63,
0x4D7A,
0x4E8C,
0x4F9A,
0x50A8,
0x51C0,
0x52CE,
0x53D6,
0x54EC,
0x55F4,
0x56FB,
0x57FF,
0x5800,
0x590E,
0x5A15,
0x5B2E,
0x5C41,
0x5D4E,
0x5E6A,
0x5F7F,
0x6091,
0x61A0,
0x62C1,
0x63D3,
0x64E3,
0x65EB,
0x66F2,
0x67F9,
0x68FF,
0xFF87,
0xD500,
0xFF85,
0x863C,
0xFFA0,
0x4378,
0x4498,
0x458E,
0x4670,
0x4780,
0x4880,
0x4980,
0x4A80,
0x4B76,
0x4C90,
0x4D9C,
0x4E90,
0x52B4,
0x5320,
0x5400,
0xFF85,
0x32C0,
0x3340,
0x3400,
0x3590,
0x3620,
0x3700,
0x1CD1,
0x1D47,
0x1E00,
0x1F91,
0x201A,
0x2100,
0xFF87,
0xAD01,
0xABFF,
0xACFF,
0xFF82,
0x78DB,
0xFFA1,
0x99A0,
0xFF83,
0x4F05,
0x0304,
0x0404,
0x0504,
0x0604,
0xFF82,
0xF901,
0xFA60,
0xFBB0,
0xFC70,
0xFD30,
0xFE12,
0xD600,
0xD7A0,
0xD801,
0xD900,
0xDA02,
0xDB80,
0xD318,
0xD430,
0xD5D0,
0xF30B,
0xF4A9,
0xFF83,
0x0F02,
0x10EE,
0xFF82,
0x9102,
0x924F,


0xFF87,
0xDC05,
0xDD34,
0xd500,


0xFFD0,
0x2013,
0x2011,
0xFFB0,
0x5402,
0x3805,
0xFF85,
0xB401,
0xB501,
0xFF86,
0x380A,
0x3900,
0x3C04,
0xFFD1,
0x0700,
0x0B00,
0xFFC0,
0x1042,

};

static const u16 db8131m_vga_common[] = {

0xFF87,
0xDE7A,
0xFFC0,
0x1042,


0xFF82,
0x9102,
0xFF83,
0x0D02,
0x0E26,
0x0304,
0x0403,
0x0502,
0x0601,
0xFF82,
0x925D,
};

static const u16 db8131m_recording_60Hz_common[] = {

0xE796,

0xFF87,
0xDE7A,
0xFFC0,
0x1042,


0xFF82,
0x9102,
0x921D,
0xFF83,
0x0D02,
0x0E94,
0x0304,
0x0403,
0x0502,
0x0601,
0xFF82,
0x925D,
};

static const u16 db8131m_recording_50Hz_common[] = {
0xE796,

0xFF87,
0xDE7A,
0xFFC0,
0x1042,


0xFF82,
0x9102,
0x9219,
0xFF83,
0x1302,
0x1494,
0x0703,
0x0803,
0x0902,
0x0A01,
0xFF82,
0x925D,
};

static const u16 db8131m_stream_stop[] = {
};


static const u16 db8131m_bright_m4[] = {

0xFF87,
0xAEB0,
};


static const u16 db8131m_bright_m3[] = {

0xFF87,
0xAED0,
};


static const u16 db8131m_bright_m2[] = {

0xFF87,
0xAEE0,
};


static const u16 db8131m_bright_m1[] = {


0xFF87,
0xAEF0,
};


static const u16 db8131m_bright_default[] = {

0xFF87,
0xAE00,
};


static const u16 db8131m_bright_p1[] = {

0xFF87,
0xAE10,
};


static const u16 db8131m_bright_p2[] = {

0xFF87,
0xAE20,
};


static const u16 db8131m_bright_p3[] = {

0xFF87,
0xAE30,
};


static const u16 db8131m_bright_p4[] = {

0xFF87,
0xAE50,
};


static const u16 db8131m_vt_pretty_default[] = {
};


static const u16 db8131m_vt_pretty_1[] = {
};



static const u16 db8131m_vt_pretty_2[] = {
};



static const u16 db8131m_vt_pretty_3[] = {
};

static const u16 db8131m_vt_7fps[] = {

0xFF82,
0x9102,
0xFF83,
0x0B09,
0x0C33,
0x030F,
0x040A,
0x0506,
0x0604,
0xFF82,
0x925D,
};

static const u16 db8131m_vt_10fps[] = {

0xFF82,
0x9102,
0xFF83,
0x0B06,
0x0C70,
0x030A,
0x0408,
0x0506,
0x0604,
0xFF82,
0x925D,
};

static const u16 db8131m_vt_12fps[] = {

0xFF82,
0x9102,
0xFF83,
0x0B05,
0x0C5E,
0x0309,
0x0408,
0x0506,
0x0604,
0xFF82,
0x925D,
};

static const u16 db8131m_vt_15fps[] = {

0xFF82,
0x9102,
0xFF83,
0x0B04,
0x0C4C,
0x0308,
0x0406,
0x0504,
0x0604,
0xFF82,
0x925D,
};


static const u16 db8131m_pattern_on[] = {
0xFF87,
0xAB00,
0xAC28,
0xFFA0,
0x0205,
};


static const u16 db8131m_pattern_off[] = {
0xFF87,
0xABFF,
0xACFF,
0xFFA0,
0x0200,
};

static const u16 db8131m_flip_off[] = {
0xFF87,
0xd500,
};

static const u16 db8131m_vflip[] = {
0xFF87,
0xd508,
};

static const u16 db8131m_hflip[] = {
0xFF87,
0xd504,
};

static const u16 db8131m_flip_off_No15fps[] = {
0xFF87,
0xd502,
};

static const u16 db8131m_vflip_No15fps[] = {
0xFF87,
0xd50A,
};

static const u16 db8131m_hflip_No15fps[] = {
0xFF87,
0xd506,
};
#endif /* __DB8131M_REG_H */
